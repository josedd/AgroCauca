@model CrudAgroCauca.Models.Eventos

@{
    ViewBag.Title = "Guardar";
}

<h2>Guardar</h2>


@using (Html.BeginForm("Nuevo", "Eventos", new { ReturnUrl = ViewBag.Re }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Eventos</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NombreEvento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NombreEvento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NombreEvento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UbicacionEvento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UbicacionEvento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UbicacionEvento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <font color="green">@ViewBag.mensaje</font>
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Ver Eventos", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
